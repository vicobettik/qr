{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/shared/footer/footer.component.ts","./src/app/components/shared/footer/footer.component.html","./src/app/components/shared/navbar/navbar.component.ts","./src/app/components/shared/navbar/navbar.component.html","./src/app/models/qr.model.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\n\n\nconst routes: Routes = [\n  { path:'', component: HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'qrCode';\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <router-outlet class=\"m-5\"></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\n\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { FormsModule } from '@angular/forms';\nimport { FooterComponent } from './components/shared/footer/footer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    QRCodeModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { qrModel } from '../../models/qr.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n qr = new qrModel();\n\n  constructor() { \n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  cambiarTamanio( tamanio: number ) {\n    this.qr.size = tamanio;\n  } \n\n}\n","\n<div class=\"container\">\n\n    <h3>Creación de código QR</h3>\n\n    <form>\n        <div class=\"form-group row\">\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Datos del qr</label>\n          <div class=\"col-sm-10\">\n            <textarea [(ngModel)]=\"qr.string\"\n                    name=\"stringQR\"\n                    class=\"form-control\" id=\"inputEmail3\"\n                    rows=\"5\"\n                    autocomplete=\"false\"\n                    style=\"resize:none;\">\n            </textarea>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Tamaño</label>\n          <div class=\"col-sm-10\">\n            <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <label class=\"btn btn-primary active\">\n                  <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" (click)=\"cambiarTamanio(256)\"> 250px\n                </label>\n                <label class=\"btn btn-primary\">\n                  <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\" (click)=\"cambiarTamanio(512)\"> 500px\n                </label>\n                <label class=\"btn btn-primary\">\n                  <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\" (click)=\"cambiarTamanio(750)\"> 750px\n                </label>\n                <label class=\"btn btn-primary\">\n                  <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\" (click)=\"cambiarTamanio(1024)\"> 1000px\n                </label>\n              </div>\n          </div>\n        </div>\n\n        <!-- <div class=\"form-group row\">\n          <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Color primario</label>\n          <div class=\"col-sm-5\">\n            <input type=\"color\"\n            class=\"form-control\"\n            [(ngModel)]=\"qr.colorPrimary\" \n            name=\"colorPrimary\"\n            colorpick-eyedropper-active=\"true\">\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Color secundario</label>\n          <div class=\"col-sm-5\">\n            <input type=\"color\"\n            class=\"form-control\"\n            [(ngModel)]=\"qr.colorSecondary\" \n            name=\"colorSecondary\"\n            colorpick-eyedropper-active=\"true\">\n          </div>\n        </div> -->\n        \n        \n        \n      </form>\n</div>\n\n<div class=\"text-center\">\n    <qrcode\n    [qrdata]=\"qr.string\" \n    [width]=\"qr.size\" \n    [errorCorrectionLevel]=\"'H'\"\n    [allowEmptyString]=\"true\"\n    [colorDark]=\"qr.colorPrimary\"\n    [colorLight]=\"qr.colorSecondary\"\n    [scale]=\"50\"\n    [elementType]=\"'img'\"\n    [margin]=\"'3'\"\n    *ngIf=\"qr.string.length > 0\">\n</qrcode>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container\">\n        <div class=\"navbar-brand\">\n            Hecho por: Victor Amaury Fuentes Menes\n        </div>\n        <div class=\"navbar-brand\">\n            vicuo@hotmail.com\n        </div>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">Creacion de codigo QR</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n      </ul>\n    </div>\n    <div class=\"text-right\">\n      <span class=\"text-white bg-dark\">\n          Hecho por: Victor Amaury Fuentes Menes\n      </span>\n      <span class=\"text-white bg-dark\">\n          vicuo@hotmail.com\n      </span>\n  </div>\n  </nav>","export class qrModel {\r\n    string = '';\r\n    colorPrimary = '#000'\r\n    colorSecondary = '#FFFF'\r\n    size = 300\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}